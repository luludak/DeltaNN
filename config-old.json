{
    "note": "All Models use input/output as the base format, but since on some cases there is transposition of some dims, we set the initial input and we infer the actual run input on run phase.",
    "preprocessing_enabled": true,
    "debug_enabled": false,
    "backend": "tvm",
    "runs_no": 1,
    "conv_analysis_enabled": true,
    "models": [
        {
            "name": "MobileNetV2",
            "skip_analysis": true,
            "build": false,
            "execute": true,
            "evaluate": false,
            "build_dlls": false,
            "execute_dlls": true,
            "evaluate_dlls": true,
            "url": "https:/github.com/onnx/models/raw/master/vision/classification/mobilenet/model/mobilenetv2-7.onnx",
            "alias": "mobilenetv2-7.onnx",
            "type":"onnx",
            "category": "classification",
            "input_name": "input",
            "layers": {
                "image_dimension": [224, 224],
                "input": [
                    1,
                    3,
                    224,
                    224
                    
                ],
                "output": [
                    1,
                    1000
                ]
            },
        
            "ranks_url": "...",
            "paths": {
                "models_out_relative": "/generated/MobileNet-2-7/models/",
                "exec_out_relative": "/generated/MobileNet-2-7/out_large/opt2/local/",
                "evaluation_out_relative": "/generated/MobileNet-2-7/out_large/opt2/",
                "dll_exec_out_relative": "/generated/MobileNet-2-7/out_large/opt2/local/",
                "dll_models_out_relative": "/generated/MobileNet-2-7/models/"
            },
            "dll_libraries": [
                {
                    "library": "tflite",
                    "load": "local",
                    "dependency": "mobilenet_v2.tflite",
                    "model": "mobilenet_v2.tflite",
                    "input_name": "input",
                    "output_name": "MobilenetV2/Predictions/Reshape_1",
                    "input": [
                        1,  
                        3,
                        224,
                        224
                       
                    ],
                    "output": [
                        1,
                        1001
                    ]
                },
                {
                    "library": "noop_tf",
                    "load": "local",
                    "dependency": "mobilenet_v2.pb",
                    "model": "mobilenet_v2.pb",
                    "input_name": "input:0",
                    "output_name": "MobilenetV2/Predictions/Reshape_1:0",
                    "scalar_input": true,
                    "input": [
                        1,
                        224,
                        224,
                        3
                    ],
                    "output": [
                        1,
                        1001
                    ]
                },
                {
                    "library": "tf_to_tflite",
                    "load": "local",
                    "dependency": "mobilenet_v2.pb",
                    "model": "mobilenet_v2.pb",
                    "input_name": "input",
                    "output_name": "MobilenetV2/Predictions/Reshape_1",
                    "scalar_input": true,
                    "input": [
                        1,
                        224,
                        224,
                        3
                        
                    ],
                    "output": [
                        1,
                        1001
                    ]
                },
                {
                    "note": "You can use this setting to convert from one library to another.",
                    "library": "noop_torch_to_tflite",
                    "load": "library",
                    "dependency": "torchvision_models.mobilenet_v2",
                    "model": "torchvision_models.mobilenet_v2",
                    "input_name": "inputs:0",
                    "output_name": "output",
                    "input": [
                        1,
                        3,
                        224,
                        224
                    ],
                    "output": [
                        1,
                        1000
                    ]
                },
                {
                    "library": "torch",
                    "load": "library",
                    "dependency": "torchvision_models.mobilenet_v2",
                    "model": "torchvision_models.mobilenet_v2",
                    "input_name": "inputs:0",
                    "output_name": "output",
                    "input": [
                        1,
                        3,
                        224,
                        224
                    ],
                    "output": [
                        1,
                        1000
                    ]
                },
                {
                "library": "keras",
                "load": "library",
                "dependency": "keras.applications.mobilenet_v2",
                "model": "keras.applications.MobileNetV2",
                "input_name": "inputs:0",
                "output_name": "output",
                "input": [
                    1,
                    224,
                    224,
                    3
                ],
                "output": [
                        1,
                        1000
                    ]
            }]
        },
        {
            "note": "If you want to test this model, please download resources as described in the README file.",
            "name": "ResNet101",
            "skip_analysis": false,
            "build": false,
            "execute": true,
            "build_dlls": false,
            "execute_dlls": false,
            "evaluate": true,
            "evaluate_dlls": false,
            "url": "",
            "alias": "resnet-101.onnx",
            "dll_alias": "ResNet101",
            "input_name": "input",
            "layers": {
                "image_dimension": [299, 299],
                "input": [
                    1,
                    299,
                    299,
                    3
                ],
                "output": [
                    1,
                    1000
                ]
            },
            "dll_libraries": [
            {
                "library": "torch",
                "load": "library",
                "dependency": "torchvision_models.resnet101",
                "model": "torchvision_models.resnet101",
                "input_name": "inputs:0",
                "output_name": "output",
                "image_dimension": [224, 224],
                "input": [
                    1,
                    3,
                    224,
                    224
                ],
                "output": [
                    1,
                    1000
                ]
            },
            {
                "library": "tflite",
                "load": "local",
                "dependency": "resnet_v2_101.tflite",
                "model": "resnet_v2_101.tflite",
                "input_name": "input",
                "scalar_input": true,
                "output_name": "output",
                "input": [
                    1,
                    3,
                    299,
                    299
                ],
                "output": [
                    1,
                    1001
                ]
            },
            {
                "library": "tf",
                "load": "local",
                "dependency": "resnet_v2_101.pb",
                "model": "resnet_v2_101.pb",
                "input_name": "input:0",
                "scalar_input": true,
                "output_name": "resnet_v2_101/SpatialSqueeze:0",
                "input": [
                    1,
                    299,
                    299,
                    3
                ],
                "output": [
                    1,
                    1001
                ]
            },
            {
                "library": "tf_to_tflite",
                "load": "local",
                "dependency": "resnet_v2_101.pb",
                "model": "resnet_v2_101.pb",
                "input_name": "input",
                "scalar_input": true,
                "output_name": "output",
                "input": [
                    1,
                    299,
                    299,
                    3
                ],
                "output": [
                    1,
                    1001
                ]
            },
            {
                "library": "noop_torch_to_tflite",
                "load": "library",
                "dependency": "torchvision_models.resnet101",
                "model": "torchvision_models.resnet101",
                "input_name": "inputs:0",
                "output_name": "output",
                "input": [
                    1,
                    3,
                    299,
                    299
                ],
                "output": [
                    1,
                    1000
                ]
            },      
            {
            "library": "keras",
            "load": "library",
            "dependency": "keras.applications.resnet_v2",
            "model": "keras.applications.resnet_v2.ResNet101V2",
            "input_name": "inputs:0",
            "output_name": "output",
            "input": [
                1,
                299,
                299,
                3
            ],
            "output": [
                    1,
                    1000
                ]
            }],
        
            "ranks_url": "...",
            "paths": {
                "evaluation_out_relative": "/generated/ResNet101/out_large/opt2/",
                "models_out_relative": "/generated/ResNet101/models/",
                "exec_out_relative": "/generated/ResNet101/out_large/opt2/local/",
                "dll_models_out_relative": "/generated/ResNet101/models/",
                "dll_exec_out_relative": "/generated/ResNet101/out_large/opt2/local/"
            }
        },
        {
            "name": "DenseNet121",
            "skip_analysis": true,
            "build": false,
            "execute": true,
            "evaluate": false,
            "build_dlls": false,
            "execute_dlls": false,
            "evaluate_dlls": false,
            "url": "https:/github.com/onnx/models/raw/master/vision/classification/densenet-121/model/densenet-9.onnx?raw=true",
            "alias": "densenet-9.onnx",
            "type":"onnx",
            "category": "classification",
            "input_name": "data_0",
            "dl_input_name": "inputs:0",
            "layers": {
                "image_dimension": [224, 224],
                "input": [
                    1,
                    3,
                    224,
                    224
                ],
                "output": [
                    1,
                    1000
                ]
            },
    
            "ranks_url": "...",
            "paths": {
                "evaluation_out_relative": "/generated/DenseNet121-9/out_large/opt2/",
                "models_out_relative": "/generated/DenseNet121-9/models/",
                "exec_out_relative": "/generated/DenseNet121-9/out_large/opt2/local/",
                "dll_models_out_relative": "/generated/DenseNet121-9/models/",
                "dll_exec_out_relative": "/generated/DenseNet121-9/out_large/opt2/local/"
            },
            "dll_libraries": [
                {
                    "library": "noop_tflite",
                    "load": "local",
                    "dependency": "densenet.tflite",
                    "model": "densenet.tflite",
                    "input_name": "Placeholder",
                    "output_name": "softmax_tensor",
                    "input": [
                        1,
                        3,
                        224,
                        224
                    ],
                    "output": [
                        1,
                        1001
                    ]
                },
                {
                    "library": "noop_tf",
                    "load": "local",
                    "dependency": "densenet.pb",
                    "model": "densenet.pb",
                    "input_name": "Placeholder:0",
                    "output_name": "softmax_tensor:0",
                    "scalar_input": true,
                    "input": [
                        1,
                        224,
                        224,
                        3
                    ],
                    "output": [
                        1,
                        1001
                    ]
                },
                {
                    "library": "noop_tf_to_tflite",
                    "load": "local",
                    "dependency": "densenet.pb",
                    "model": "densenet.pb",
                    "input_name": "Placeholder",
                    "output_name": "softmax_tensor",
                    "scalar_input": true,
                    "input": [
                        1,
                        224,
                        224,
                        3
                        
                    ],
                    "output": [
                        1,
                        1001
                    ]
                },
                {
                    "library": "noop_torch_to_tflite",
                    "load": "library",
                    "dependency": "torchvision_models.densenet121",
                    "model": "torchvision_models.densenet121",
                    "input_name": "inputs:0",
                    "output_name": "output",
                    "input": [
                        1,
                        3,
                        224,
                        224
                    ],
                    "output": [
                        1,
                        1000
                    ]
                },
                {
                    "library": "torch",
                    "load": "library",
                    "dependency": "torchvision_models.densenet121",
                    "model": "torchvision_models.densenet121",
                    "input_name": "inputs:0",
                    "output_name": "output",
                    "input": [
                        1,
                        3,
                        224,
                        224
                    ],
                    "output": [
                        1,
                        1000
                    ]
                },{
                    "library": "keras",
                    "load": "library",
                    "model": "keras.applications.DenseNet121",
                    "dependency": "keras.applications.densenet",
                    "input_name": "inputs:0",
                    "output_name": "Identity:0",
                    "input": [
                        1,
                        224,
                        224,
                        3
                    ],
                    "output": [
                        1,
                        1000
                    ]
                }]
        },
        {
            "name": "InceptionV3",
            "skip_analysis": true,
            "build": false,
            "execute": true,
            "evaluate": false,
            "build_dlls": false,
            "execute_dlls": false,
            "local": true,
            "evaluate_dlls": false,
            "url": "/generated/InceptionV3/models/InceptionV3_torch.onnx",
            "library": "noop",
            "alias": "inceptionv3_torch.onnx",
            "type":"onnx",
            "category": "classification",
            "input_name": "inputs:0",
            "dl_input_name": "inputs:0",
            "layers": {
                "image_dimension": [299, 299],
                "input": [
                    1,
                    3,
                    299,
                    299
                ],
                "output": [
                    1,
                    1000
                ]
            },
    
            "ranks_url": "...",
            "paths": {
                "evaluation_out_relative": "/generated/InceptionV3/out_large/opt2/",
                "models_out_relative": "/generated/InceptionV3/models/",
                "exec_out_relative": "/generated/InceptionV3/out_large/opt2/local/",
                "dll_models_out_relative": "/generated/InceptionV3/models/",
                "dll_exec_out_relative": "/generated/InceptionV3/out_large/opt2/local/"
             },
            
            "dll_libraries": [
            {
                "library": "tflite",
                "load": "local",
                "dependency": "inception_v3.tflite",
                "model": "inception_v3.tflite",
                "input_name": "input",
                "output_name": "InceptionV3/Predictions/Reshape_1",
                "scalar_input": false,
                "input": [
                    1,
                    3,
                    299,
                    299
                ],
                "output": [
                    1,
                    1001
                ]
            },
            {
                "library": "tf",
                "load": "local",
                "dependency": "InceptionV3.pb",
                "model": "InceptionV3.pb",
                "input_name": "input:0",
                "output_name": "InceptionV3/Predictions/Softmax:0",
                "scalar_input": false,
                "input": [
                    1,
                    299,
                    299,
                    3
                ],
                "output": [
                    1,
                    1001
                ]
            },
            {
                "library": "tf_to_tflite",
                "load": "local",
                "dependency": "InceptionV3.pb",
                "model": "InceptionV3.pb",
                "input_name": "input",
                "output_name": "InceptionV3/Predictions/Softmax",
                "scalar_input": false,
                "input": [
                    1,
                    299,
                    299,
                    3
                ],
                "output": [
                    1,
                    1001
                ]
            },
            {
                "library": "noop_torch_to_tflite",
                "load": "library",
                "dependency": "torchvision_models.inception_v3",
                "model": "torchvision_models.inception_v3",
                "input_name": "inputs:0",
                "output_name": "output",
                "input": [
                    1,
                    3,
                    299,
                    299
                ],
                "output": [
                    1,
                    1000
                ]
            },
            {
                "library": "torch",
                "load": "library",
                "dependency": "torchvision_models.inception_v3",
                "model": "torchvision_models.inception_v3",
                "input_name": "inputs:0",
                "output_name": "output",
                "input": [
                    1,
                    3,
                    299,
                    299
                ],
                "output": [
                    1,
                    1000
                ]
            },
            {
                "library": "keras",
                "load": "library",
                "dependency": "keras.applications.inception_v3",
                "model": "keras.applications.InceptionV3",
                "input_name": "inputs:0",
                "output_name": "InceptionV3/Predictions/Softmax:0",
                "input": [
                    1,
                    299,
                    299,
                    3
                ],
                "output": [
                    1,
                    1000
                ]
            }]
        }
    ],
    "devices": {
        "id": 0,
        "selected": "default",
        "out_folders": ["tf", "tflite", "torch", "keras"],
        "out_folder_aliases": ["TFLite", "TF", "PyTorch", "Keras"],
        "default": {
            "host_type": "local_no_rpc",
            "target": "opencl",
            "target_framework": "opencl",
            "host": "llvm",
            "address": "127.0.0.1",
            "port": 5000
        },
        "default_cuda": {
            "host_type": "local_no_rpc",
            "target": "cuda",
            "target_framework": "cuda",
            "host": "llvm -mtriple=aarch64-linux-gnu -mattr=+neon",
            "address": "127.0.0.1",
            "port": 5000
        },
        "hikey_gansey": {
            "host_type": "remote",
            "target": "opencl",
            "target_framework": "opencl",
            "host": "llvm -mtriple=aarch64-linux-gnu -mattr=+neon",
            "address": "",
            "port": 0
        },
        "nano_yentl": {
            "target": "cuda",
            "target_framework": "cuda",
            "host": "llvm -mtriple=aarch64-linux-gnu -mattr=+neon",
            "host_type": "remote",
            "address": "",
            "port": 0
        },
        "xavier_gluck": {
            "target": "cuda",
            "target_framework": "cuda",
            "host": "llvm -mtriple=aarch64-linux-gnu -mattr=+neon",
            "host_type": "remote",
            "address": "",
            "port": 0
        }
    },
    "selected_dataset": 0,
    "datasets": [{
        "title": "Large Dataset",
        "type": "local",
        "dataset_path_relative": "/images/ImageNet-2017-5k"
    }
    ],
    "opt_alias": "_disabled_all_opts.",
    "required_pass": null,
    "disabled_pass": ["SimplifyInference", "OpFusion", "FoldConstant",
    "FoldScaleAxis", "AlterOpLayout", "CanonicalizeOps", "CanonicalizeCast",
    "EliminateCommonSubexpr", "CombineParallelConv2D", "CombineParallelDense",
    "CombineParallelBatchMatmul", "FastMath"],
    "opt_level": 2,
    "quantize": false,
    "mutations":[],
    "occlusions": {
        "transformations": [],
        "severity": {
            "start": 1,
            "end": 1
        }
    }
}

